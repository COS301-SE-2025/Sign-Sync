name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1 libglib2.0-0

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt file found. Skipping dependency installation."
          fi

      # - name: Run Python tests
      #   run: |
      #     if [ -d "Sign-Sync/__tests__" ]; then
      #       python -m pytest Sign-Sync/__tests__/
      #     else
      #       echo "No tests directory found. Skipping Python tests."
      #     fi

      # WJ added this
      - name: Start backend services
        run: |
           nohup uvicorn Sign-Sync/backend/alphabetTranslate-service/translator_api:app --port 8000 --reload &
           nohup uvicorn Sign-Sync/backend/speechToText-service/API:app --port 8003 --reload &
           nohup uvicorn Sign-Sync/backend/textToASLGloss-service/textConversion_api:app --port 8002 --reload &
           nohup uvicorn Sign-Sync/backend/gestureRecognition-service/API:app --port 8008 --reload &
           nohup uvicorn Sign-Sync/backend/signToText-service/signToText_API:app --host 0.0.0.0 --port 8006 --reload &
           nohup uvicorn Sign-Sync/backend/wordPrediction-service/API:app --port 8005 --reload &
           nohup uvicorn Sign-Sync/backend/API_Gateway/gateway:app --port 8007 --reload &
           sleep 40

      - name: NFR Tests
        run: |
         pytest -s -v ./NFR_Testing

      # what we actually want for the testing
      #- name: Integration Tests
      #  run: |
      #    pytest -s -v ./Sign-Sync/backend

      #unit tests not using pytest I know of
      - name: Unit tests
        run: |
         python Sign-Sync/backend/wordPrediction-service/unit/test_corrector.py
         python Sign-Sync/backend/wordPrediction-service/unit/test_node.py
         python Sign-Sync/backend/wordPrediction-service/unit/test_trie.py
      
      # - name: Install dependencies for NFR tests
      #   run: |
      #     sudo apt-get install -y openjdk-11-jdk wget
          
      #     # Install JMeter with correct directory handling
      #     JMETER_VERSION="5.6.2"
      #     JMETER_URL="https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz"
          
      #     echo "Downloading JMeter from: $JMETER_URL"
      #     wget $JMETER_URL
          
      #     # Create directory first, then extract
      #     sudo mkdir -p /opt/jmeter
      #     tar -xzf apache-jmeter-${JMETER_VERSION}.tgz
          
      #     # Move contents to /opt/jmeter
      #     sudo mv apache-jmeter-${JMETER_VERSION}/* /opt/jmeter/
      #     sudo chmod +x /opt/jmeter/bin/*.sh
          
      #     # Add to PATH
      #     echo "/opt/jmeter/bin" >> $GITHUB_PATH
          
      #     # Verify installation
      #     /opt/jmeter/bin/jmeter --version

      # - name: Run NFR tests
      #   run: |
      #     # Check if the JMX file exists
      #     if [ -f "NFR_Testing/Performance1.jmx" ]; then
      #       echo "Running JMeter test: NFR_Testing/Performance1.jmx"
      #       jmeter -n -t "NFR_Testing/Performance1.jmx" -l "NFR_Testing/results.jtl" -e -o "NFR_Testing/report"
      #     else
      #       echo "JMX file not found. Looking for JMX files..."
      #       find . -name "*.jmx" | head -5
      #       echo "Available files in NFR_Testing directory:"
      #       ls -la NFR_Testing/ 2>/dev/null || echo "NFR_Testing directory not found"
      #     fi